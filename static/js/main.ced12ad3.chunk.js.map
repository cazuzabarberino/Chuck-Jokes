{"version":3,"sources":["App/global/styles.ts","App/components/Header/styles.ts","App/components/Header/index.tsx","App/pages/Explore/styles.ts","App/components/JokeContainer/styles.ts","redux/Jokes/actions.ts","App/components/JokeContainer/index.tsx","App/components/CategorySelector/styles.ts","App/components/CategorySelector/index.tsx","App/pages/Explore/index.tsx","App/pages/Home/styles.ts","App/pages/Home/index.tsx","App/router/styles.ts","App/router/index.tsx","redux/Jokes/index.ts","services/chucknorrisApi.ts","sagas/jokesSagas.ts","sagas/index.ts","redux/index.ts","App/index.tsx","index.tsx"],"names":["theme","font","primary","secondary","GlobalStyle","createGlobalStyle","Container","styled","div","transparentize","open","Title","Navigation","nav","NavMenu","button","MainNavButton","shade","NavButton","Header","useState","isMenuOpen","setMenuOpen","push","useHistory","toggleMenu","useCallback","state","goToHome","routes","home","goToExplore","explore","goToFavorites","favorites","onClick","src","alt","JokesActionType","JokeWrapper","NavigationButtons","HorizontalLine","JokeArea","JokeView","height","Quote","JokeText","p","JokeOptions","leftSwing","keyframes","rightSwing","Loading","fetchRandomJoke","type","FETCH_RANDOM_JOKE","setRandomJoke","joke","SET_RANDOM_JOKE","payload","setCategories","categories","SET_CATEGORIES","JokeContainer","showOptions","canNavigate","dispatch","useDispatch","JokeTextRef","useRef","setHeight","getNewJoke","useLayoutEffect","current","getBoundingClientRect","ref","value","CategoryArea","CategoryBtn","CategorySelector","useSelector","jokes","useEffect","FETCH_CATEGORIES","mappedCategories","useMemo","map","category","key","Explore","WelcomeMsg","Home","interval","setInterval","clearInterval","href","target","rel","console","log","Content","Router","basename","path","component","exact","initialState","api","axios","create","baseURL","getRandomJoke","a","get","response","data","alert","getCategories","fetchCategories","jokesWatchers","watchFetchRandomJoke","takeLatest","watchFetchCategories","call","put","mySagas","root","all","Object","values","fork","reducers","combineReducers","action","sagaMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","run","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ced12ad3.chunk.js","sourcesContent":["import { DefaultTheme, createGlobalStyle } from \"styled-components\";\n\nexport const theme: DefaultTheme = {\n  font: \"#404040\",\n  primary: \"#fff\",\n  secondary: \"#F9386A\",\n};\n\nexport const GlobalStyle = createGlobalStyle`\n\n  * \n  {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n    outline: 0;\n  }\n\n  button, a \n  {\n    cursor: pointer;\n  }\n\n  body \n  {\n    font-family: 'Open Sans', sans-serif;\n    font-size: 16px;\n    color: ${({ theme }) => theme.font};\n    background: ${({ theme }) => theme.primary};\n  }\n`;\n","import styled from \"styled-components\";\nimport { transparentize, shade } from \"polished\";\n\ninterface NavigationProps {\n  open: boolean;\n}\n\nexport const Container = styled.div<NavigationProps>`\n  position: fixed;\n  top: 0;\n  right: 0;\n  z-index: 99;\n\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  height: 96px;\n  width: 100%;\n  padding: 0 24px;\n\n  background: ${({ theme }) => theme.primary};\n  border-bottom: 1px solid ${({ theme }) => transparentize(0.8, theme.font)};\n\n  @media (max-width: 900px) {\n    transition: top 0.2s;\n    top: ${({ open }) => (open ? 68 : 0)}px;\n  }\n`;\n\nexport const Title = styled.div`\n  display: flex;\n  align-items: center;\n  cursor: pointer;\n\n  > img {\n    margin-right: 8px;\n  }\n\n  > h1 {\n    color: ${({ theme }) => theme.font};\n    font-size: 48px;\n    font-family: \"Pangolin\", cursive;\n    font-weight: normal;\n\n    @media (max-width: 500px) {\n      font-size: 32px;\n    }\n  }\n`;\n\nexport const Navigation = styled.nav<NavigationProps>`\n  @media (max-width: 900px) {\n    position: absolute;\n    left: 0;\n    bottom: 100%;\n    width: 100%;\n    background: ${({ theme }) => theme.primary};\n  }\n\n  > ul {\n    list-style: none;\n    display: grid;\n    grid-auto-flow: column;\n    column-gap: 16px;\n\n    @media (max-width: 900px) {\n      grid-auto-flow: row;\n    }\n  }\n`;\n\nexport const NavMenu = styled.button`\n  display: none;\n  background: none;\n  border: none;\n\n  > svg {\n    color: ${({ theme }) => theme.secondary};\n    width: 32px;\n    height: 32px;\n  }\n\n  @media (max-width: 900px) {\n    display: block;\n  }\n`;\n\nexport const MainNavButton = styled.button`\n  position: relative;\n  border: none;\n  padding: 8px 16px;\n  border-radius: 8px;\n  font-size: 16px;\n  font-weight: 600;\n\n  background: ${({ theme }) => theme.secondary};\n  color: ${({ theme }) => theme.primary};\n\n  transition: background 0.2s;\n\n  width: 100%;\n\n  :hover {\n    background: ${({ theme }) => shade(0.2, theme.secondary)};\n  }\n\n  @media (max-width: 900px) {\n    border-radius: 0px;\n  }\n`;\n\nexport const NavButton = styled(MainNavButton)`\n  @media (min-width: 900px) {\n    color: ${({ theme }) => theme.secondary};\n    background: none;\n\n    ::before {\n      content: \"\";\n      position: absolute;\n      left: 50%;\n      bottom: 0;\n      width: 100%;\n      height: 2px;\n      background-color: ${({ theme }) => theme.secondary};\n      transform-origin: center;\n      transform: translate(-50%, 0) scaleX(0);\n      transition: transform 0.3s ease-in-out;\n    }\n\n    :hover::before {\n      transform: translate(-50%, 0) scaleX(1);\n    }\n\n    :hover {\n      background: none;\n    }\n  }\n`;\n","import React, { useState, useCallback } from \"react\";\nimport {\n  Container,\n  Navigation,\n  NavButton,\n  MainNavButton,\n  Title,\n  NavMenu,\n} from \"./styles\";\nimport { FiMenu } from \"react-icons/fi\";\nimport { useHistory } from \"react-router\";\nimport { routes } from \"../../router\";\n\nconst Header: React.FC = () => {\n  const [isMenuOpen, setMenuOpen] = useState(false);\n  const { push } = useHistory();\n\n  const toggleMenu = useCallback(() => {\n    setMenuOpen((state) => !state);\n  }, []);\n\n  const goToHome = useCallback(() => push(routes.home), [push]);\n  const goToExplore = useCallback(() => push(routes.explore), [push]);\n  const goToFavorites = useCallback(() => push(routes.favorites), [push]);\n\n  return (\n    <Container open={isMenuOpen}>\n      <Title onClick={goToHome}>\n        <img\n          src=\"https://assets.chucknorris.host/img/avatar/chuck-norris.png\"\n          alt=\"\"\n        />\n        <h1>Chuck Jokes</h1>\n      </Title>\n\n      <Navigation open={isMenuOpen}>\n        <ul>\n          <li>\n            <NavButton onClick={goToFavorites}>Favorites</NavButton>\n          </li>\n          <li>\n            <MainNavButton onClick={goToExplore}>Explore Jokes</MainNavButton>\n          </li>\n        </ul>\n      </Navigation>\n      <NavMenu onClick={toggleMenu}>\n        <FiMenu />\n      </NavMenu>\n    </Container>\n  );\n};\n\nexport default Header;\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-between;\n`;\n","import styled, { keyframes } from \"styled-components\";\nimport { shade } from \"polished\";\n\nexport const Container = styled.div`\n  max-width: 900px;\n  width: calc(100% - 32px);\n  border-radius: 8px;\n  margin: 16px;\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  column-gap: 4px;\n  overflow: hidden;\n  box-shadow: 0 0 100px rgba(0, 0, 0, 0.1);\n`;\n\nexport const JokeWrapper = styled.div`\n  padding: 16px;\n  grid-column: 1/3;\n`;\n\nexport const NavigationButtons = styled.div`\n  background: ${({ theme }) => theme.secondary};\n  display: grid;\n  place-content: center;\n  cursor: pointer;\n  transition: background 0.2s;\n\n  :hover {\n    background: ${({ theme }) => shade(0.2, theme.secondary)};\n  }\n\n  > svg {\n    color: ${({ theme }) => theme.primary};\n    width: 48px;\n    height: 48px;\n  }\n`;\n\nexport const HorizontalLine = styled.div`\n  height: 2px;\n  border-radius: 2px;\n  width: 100%;\n  background: ${({ theme }) => theme.secondary};\n  margin-top: 16px;\n  margin-bottom: 8px;\n`;\n\nexport const JokeArea = styled.div`\n  display: grid;\n  grid-template-columns: auto 1fr auto;\n  align-items: center;\n  column-gap: 16px;\n`;\n\ninterface JokeViewProps {\n  height: number;\n}\n\nexport const JokeView = styled.div<JokeViewProps>`\n  position: relative;\n  display: flex;\n  justify-content: center;\n  height: ${({ height }) => height}px;\n  transition: height 0.3s ease-in-out;\n  overflow: hidden;\n`;\n\nexport const Quote = styled.div`\n  :first-child {\n    align-self: flex-start;\n  }\n\n  :last-child {\n    align-self: flex-end;\n  }\n\n  svg {\n    color: ${({ theme }) => theme.secondary};\n  }\n`;\n\nexport const JokeText = styled.p`\n  position: absolute;\n  font-size: 24px;\n  text-align: justify;\n`;\n\nexport const JokeOptions = styled.div`\n  padding: 0 16px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  svg {\n    cursor: pointer;\n    width: 32px;\n    height: 32px;\n    transition: 0.2s;\n\n    :hover {\n      color: ${({ theme }) => theme.secondary};\n      transform: scale(1.1);\n    }\n\n    + svg {\n      margin-left: 8px;\n    }\n  }\n`;\n\nconst leftSwing = keyframes`\n  50%,\n  100% {\n    transform: translateX(95%);\n  }\n`;\n\nconst rightSwing = keyframes`\n  50% {\n    transform: translateX(-95%);\n  }\n  100% {\n    transform: translateX(100%);\n  }\n`;\n\nexport const Loading = styled.div`\n  font-size: 24px;\n  width: 4em;\n  display: flex;\n  flex-flow: row nowrap;\n  align-items: center;\n  justify-content: space-between;\n  justify-self: center;\n  padding: 16px 0;\n\n  div {\n    width: 0.8em;\n    height: 0.8em;\n    border-radius: 50%;\n    background-color: ${({ theme }) => theme.secondary};\n  }\n\n  div:nth-of-type(1) {\n    transform: translateX(-100%);\n    animation: ${leftSwing} 0.5s ease-in alternate infinite;\n  }\n\n  div:nth-of-type(3) {\n    transform: translateX(-95%);\n    animation: ${rightSwing} 0.5s ease-out alternate infinite;\n  }\n`;\n","import Joke from \"../../models/Joke\";\n\nexport enum JokesActionType {\n  FETCH_RANDOM_JOKE = \"FETCH_RANDOM_JOKE\",\n  SET_RANDOM_JOKE = \"SET_RANDOM_JOKE\",\n  FETCH_CATEGORIES = \"FETCH_CATEGORIES\",\n  SET_CATEGORIES = \"SET_CATEGORIES\",\n  ADD_TO_FAVORITES = \"ADD_TO_FAVORITES\",\n  REMOVE_FROM_FAVORITES = \"REMOVE_FROM_FAVORITES\",\n}\n\nexport type JokesActions =\n  | {\n      type: JokesActionType.FETCH_RANDOM_JOKE;\n    }\n  | {\n      type: JokesActionType.SET_RANDOM_JOKE;\n      payload: {\n        joke: Joke;\n      };\n    }\n  | {\n      type: JokesActionType.FETCH_CATEGORIES;\n    }\n  | {\n      type: JokesActionType.SET_CATEGORIES;\n      payload: {\n        categories: string[];\n      };\n    }\n  | {\n      type: JokesActionType.ADD_TO_FAVORITES;\n      payload: {\n        id: string;\n      };\n    }\n  | {\n      type: JokesActionType.REMOVE_FROM_FAVORITES;\n      payload: {\n        id: string;\n      };\n    };\n\nexport const fetchRandomJoke = (): JokesActions => ({\n  type: JokesActionType.FETCH_RANDOM_JOKE,\n});\n\nexport const setRandomJoke = (joke: Joke): JokesActions => ({\n  type: JokesActionType.SET_RANDOM_JOKE,\n  payload: {\n    joke,\n  },\n});\n\nexport const fetchCategories = (): JokesActions => ({\n  type: JokesActionType.FETCH_CATEGORIES,\n});\n\nexport const setCategories = (categories: string[]): JokesActions => ({\n  type: JokesActionType.SET_CATEGORIES,\n  payload: {\n    categories,\n  },\n});\n","import React, { useCallback, useRef, useLayoutEffect, useState } from \"react\";\nimport {\n  FaFacebook,\n  FaInstagram,\n  FaQuoteLeft,\n  FaQuoteRight,\n  FaRegStar,\n  FaTwitter,\n  FaWhatsapp,\n} from \"react-icons/fa\";\nimport { IoIosArrowBack, IoIosArrowForward } from \"react-icons/io\";\nimport {\n  Container,\n  HorizontalLine,\n  JokeArea,\n  JokeOptions,\n  JokeText,\n  JokeWrapper,\n  NavigationButtons,\n  Quote,\n  Loading,\n  JokeView,\n} from \"./styles\";\nimport Joke from \"../../../models/Joke\";\nimport { useDispatch } from \"react-redux\";\nimport { fetchRandomJoke } from \"../../../redux/Jokes/actions\";\n\ninterface Props {\n  joke: Joke | null;\n  canNavigate?: boolean;\n  showOptions?: boolean;\n}\n\nconst JokeContainer: React.FC<Props> = ({ showOptions, canNavigate, joke }) => {\n  const dispatch = useDispatch();\n  const JokeTextRef = useRef<HTMLParagraphElement>(null);\n  const [height, setHeight] = useState(32);\n  const getNewJoke = useCallback(() => dispatch(fetchRandomJoke()), [dispatch]);\n\n  useLayoutEffect(() => {\n    setHeight(\n      joke ? JokeTextRef.current?.getBoundingClientRect().height || 32 : 32\n    );\n  }, [joke, setHeight]);\n\n  return (\n    <Container>\n      <JokeWrapper>\n        <JokeArea>\n          <Quote>\n            <FaQuoteLeft />\n          </Quote>\n          <JokeView height={height}>\n            {joke ? (\n              <JokeText ref={JokeTextRef}>{joke.value}</JokeText>\n            ) : (\n              <Loading>\n                <div />\n                <div />\n                <div />\n              </Loading>\n            )}\n          </JokeView>\n\n          <Quote>\n            <FaQuoteRight />\n          </Quote>\n        </JokeArea>\n        {showOptions && (\n          <>\n            <HorizontalLine />\n            <JokeOptions>\n              <FaRegStar />\n              <div>\n                <FaFacebook />\n                <FaWhatsapp />\n                <FaTwitter />\n                <FaInstagram />\n              </div>\n            </JokeOptions>\n          </>\n        )}\n      </JokeWrapper>\n      {canNavigate && (\n        <>\n          <NavigationButtons>\n            <IoIosArrowBack />\n          </NavigationButtons>\n          <NavigationButtons onClick={getNewJoke}>\n            <IoIosArrowForward />\n          </NavigationButtons>\n        </>\n      )}\n    </Container>\n  );\n};\n\nexport default JokeContainer;\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  max-width: 900px;\n  margin: 16px;\n`;\n\nexport const CategoryArea = styled.div`\n  position: relative;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  border: 4px solid ${({ theme }) => theme.font};\n  border-radius: 8px;\n  padding: 8px;\n\n  p {\n    border-radius: 8px;\n    position: absolute;\n    bottom: 100%;\n    left: 16px;\n    font-weight: bold;\n    padding: 0 8px;\n    font-size: 24px;\n    background: ${({ theme }) => theme.primary};\n    transform: translateY(40%);\n  }\n`;\n\nexport const CategoryBtn = styled.button`\n  background: ${({ theme }) => theme.secondary};\n  color: ${({ theme }) => theme.primary};\n  font-size: 24px;\n  border: 2px solid ${({ theme }) => theme.secondary};\n  border-radius: 8px;\n  padding: 4px 8px;\n  margin: 4px;\n`;\n","import React, { useEffect, useMemo } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { RootState } from \"../../../redux\";\nimport { fetchCategories } from \"../../../redux/Jokes/actions\";\nimport { CategoryBtn, Container, CategoryArea } from \"./styles\";\n\nconst CategorySelector: React.FC = () => {\n  const categories = useSelector((state: RootState) => state.jokes.categories);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (!categories) {\n      dispatch(fetchCategories());\n    }\n  }, [categories, dispatch]);\n\n  const mappedCategories = useMemo(() => {\n    return !categories\n      ? []\n      : categories.map((category) => (\n          <CategoryBtn key={category}>{category}</CategoryBtn>\n        ));\n  }, [categories]);\n\n  return (\n    <Container>\n      <CategoryArea>\n        <p>Categories</p>\n        {mappedCategories}\n      </CategoryArea>\n    </Container>\n  );\n};\nexport default CategorySelector;\n","import React, { useEffect } from \"react\";\nimport { Container } from \"./styles\";\nimport JokeContainer from \"../../components/JokeContainer\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { RootState } from \"../../../redux\";\nimport { fetchRandomJoke } from \"../../../redux/Jokes/actions\";\nimport CategorySelector from \"../../components/CategorySelector\";\n\nconst Explore: React.FC = () => {\n  const { joke } = useSelector((state: RootState) => state.jokes);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (!joke) dispatch(fetchRandomJoke());\n  }, [dispatch, joke]);\n\n  return (\n    <Container>\n      <JokeContainer joke={joke} canNavigate showOptions />\n      <CategorySelector />\n    </Container>\n  );\n};\n\nexport default Explore;\n","import { shade } from \"polished\";\nimport styled from \"styled-components\";\n\nexport const Container = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nexport const WelcomeMsg = styled.div`\n  position: relative;\n  flex: 1;\n  margin: 16px;\n  width: calc(100% - 32px);\n  max-width: 900px;\n  display: grid;\n  justify-items: center;\n  align-items: center;\n  border-radius: 8px;\n  overflow: hidden;\n\n  p {\n    position: relative;\n    z-index: 2;\n    padding: 16px;\n    font-size: 32px;\n    text-align: center;\n\n    span {\n      font-size: 96px;\n      font-family: \"Pangolin\", cursive;\n    }\n\n    a {\n      color: ${({ theme }) => theme.font};\n    }\n  }\n\n  button {\n    position: relative;\n    z-index: 2;\n    font-size: 32px;\n    background: ${({ theme }) => theme.secondary};\n    color: ${({ theme }) => theme.primary};\n    border: none;\n    border-radius: 8px;\n    padding: 8px 32px;\n    transition: background 0.2s;\n    align-self: flex-start;\n\n    :hover {\n      background: ${({ theme }) => shade(0.2, theme.secondary)};\n    }\n  }\n`;\n","import React, { useEffect } from \"react\";\nimport { Container, WelcomeMsg } from \"./styles\";\nimport JokeContainer from \"../../components/JokeContainer\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { RootState } from \"../../../redux\";\nimport { fetchRandomJoke } from \"../../../redux/Jokes/actions\";\nimport { useHistory } from \"react-router\";\nimport { routes } from \"../../router\";\n\nconst Home: React.FC = () => {\n  const { joke } = useSelector((state: RootState) => state.jokes);\n  const dispatch = useDispatch();\n  const { push } = useHistory();\n\n  useEffect(() => {\n    dispatch(fetchRandomJoke());\n    const interval = setInterval(() => {\n      dispatch(fetchRandomJoke());\n    }, 8000);\n    return () => clearInterval(interval);\n  }, [dispatch]);\n\n  return (\n    <Container>\n      <JokeContainer joke={joke} />\n      <WelcomeMsg>\n        <p>\n          Welcome to\n          <br />\n          <span>Chuck Jokes!</span>\n          <br />A Chuck Norris facts explorer powered by{\" \"}\n          <a\n            href=\"https://api.chucknorris.io/\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            chucknorris.io\n          </a>\n          .\n        </p>\n        <button\n          onClick={() => {\n            push(routes.explore);\n            console.log(\"lol\");\n          }}\n        >\n          Explore Jokes\n        </button>\n      </WelcomeMsg>\n    </Container>\n  );\n};\n\nexport default Home;\n","import styled from \"styled-components\";\n\nexport const Content = styled.div`\n  display: flex;\n  padding-top: 96px;\n  min-height: 100vh;\n`;\n","import React from \"react\";\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\nimport Header from \"../components/Header\";\nimport Explore from \"../pages/Explore\";\nimport Home from \"../pages/Home\";\nimport { Content } from \"./styles\";\n\nexport const routes = {\n  home: \"/\",\n  explore: \"/explore\",\n  favorites: \"/favorites\",\n};\n\nconst Router: React.FC = () => {\n  return (\n    <HashRouter basename=\"\">\n      <Header />\n      <Content>\n        <Switch>\n          <Route path={routes.explore} component={Explore} />\n          <Route exact path={routes.home} component={Home} />\n        </Switch>\n      </Content>\n    </HashRouter>\n  );\n};\n\nexport default Router;\n","import Joke from \"../../models/Joke\";\nimport { JokesActions, JokesActionType } from \"./actions\";\n\nexport interface JokesState {\n  joke: Joke | null;\n  category: string | null;\n  favorites: string[];\n  categories: string[] | null;\n}\n\nconst initialState: JokesState = {\n  joke: null,\n  category: null,\n  favorites: [],\n  categories: null,\n};\n\nexport const JokesReducer = (\n  state = initialState,\n  action: JokesActions\n): JokesState => {\n  switch (action.type) {\n    case JokesActionType.FETCH_RANDOM_JOKE:\n      return {\n        ...state,\n        joke: null,\n      };\n    case JokesActionType.SET_RANDOM_JOKE:\n      return {\n        ...state,\n        joke: action.payload.joke,\n      };\n    case JokesActionType.SET_CATEGORIES:\n      return {\n        ...state,\n        categories: action.payload.categories,\n      };\n    default:\n      return state;\n  }\n};\n","import axios from \"axios\";\nimport Joke from \"../models/Joke\";\n\nconst api = axios.create({\n  baseURL: \"https://api.chucknorris.io/jokes\",\n});\n\nexport const getRandomJoke = async (): Promise<Joke> => {\n  try {\n    const response = await api.get<Joke>(\"random\");\n    return response.data;\n  } catch (err) {\n    alert(\"Server problems, please try again later.\");\n    return {} as Joke;\n  }\n};\n\nexport const getCategories = async (): Promise<string[]> => {\n  try {\n    const response = await api.get<string[]>(\"categories\");\n    return response.data;\n  } catch (err) {\n    return [];\n  }\n};\n","import { call, put, takeLatest } from \"redux-saga/effects\";\nimport { getRandomJoke, getCategories } from \"../services/chucknorrisApi\";\nimport {\n  setRandomJoke,\n  setCategories,\n  JokesActionType,\n} from \"../redux/Jokes/actions\";\n\nexport const jokesWatchers = {\n  watchFetchRandomJoke: function* () {\n    yield takeLatest(JokesActionType.FETCH_RANDOM_JOKE, fetchRandomJoke);\n  },\n\n  watchFetchCategories: function* () {\n    yield takeLatest(JokesActionType.FETCH_CATEGORIES, fetchCategories);\n  },\n};\n\nexport function* fetchRandomJoke() {\n  const joke = yield call(getRandomJoke);\n  yield put(setRandomJoke(joke));\n}\n\nexport function* fetchCategories() {\n  const categories = yield call(getCategories);\n  yield put(setCategories(categories));\n}\n","import { jokesWatchers } from \"./jokesSagas\";\nimport { all, fork } from \"redux-saga/effects\";\n\nconst mySagas = function* root() {\n  yield all(Object.values(jokesWatchers).map(fork));\n};\n\nexport default mySagas;\n","import { createStore, applyMiddleware, combineReducers } from \"redux\";\nimport { JokesState, JokesReducer } from \"./Jokes\";\nimport createSagaMiddleware from \"redux-saga\";\nimport mySagas from \"../sagas\";\n\nexport interface RootState {\n  jokes: JokesState;\n}\n\nconst reducers = combineReducers<RootState>({ jokes: JokesReducer });\nconst sagaMiddleware = createSagaMiddleware();\nexport const store = createStore(reducers, applyMiddleware(sagaMiddleware));\nsagaMiddleware.run(mySagas);\n","import React from \"react\";\nimport { GlobalStyle, theme } from \"./global/styles\";\nimport { ThemeProvider } from \"styled-components\";\nimport Router from \"./router\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"../redux\";\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <ThemeProvider theme={theme}>\n        <GlobalStyle />\n        <Router />\n      </ThemeProvider>\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}