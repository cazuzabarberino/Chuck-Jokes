{"version":3,"sources":["App/global/styles.ts","App/components/Header/styles.ts","App/components/Header/index.tsx","App/pages/Explore/styles.ts","App/pages/Explore/index.tsx","App/pages/Home/styles.ts","App/components/JokeContainer/styles.ts","redux/Jokes/actions.ts","App/components/JokeContainer/index.tsx","App/pages/Home/index.tsx","App/router/styles.ts","App/router/index.tsx","redux/Jokes/index.ts","services/chucknorrisApi.ts","sagas/jokesSagas.ts","sagas/index.ts","redux/index.ts","App/index.tsx","index.tsx"],"names":["theme","font","primary","secondary","GlobalStyle","createGlobalStyle","Container","styled","div","transparentize","open","Title","Navigation","nav","NavMenu","button","MainNavButton","shade","NavButton","Header","useState","isMenuOpen","setMenuOpen","toggleMenu","useCallback","state","src","alt","onClick","Explore","WelcomeMsg","JokeWrapper","NavigationButtons","HorizontalLine","JokeArea","Quote","JokeText","p","JokeOptions","leftSwing","keyframes","rightSwing","Loading","endFecthRandomJoke","joke","type","payload","JokeContainer","showOptions","canNavigate","dispatch","useDispatch","getNewJoke","value","Home","useSelector","jokes","push","useHistory","useEffect","interval","setInterval","clearInterval","href","target","rel","routes","explore","console","log","Content","createBrowserHistory","home","favorites","Router","basename","path","component","exact","initialState","category","api","axios","create","baseURL","getRandomJoke","a","get","response","data","alert","fetchRandomJoke","jokesWatchers","watchFetchRandomJoke","takeEvery","call","put","mySagas","root","all","Object","values","map","fork","reducers","combineReducers","action","sagaMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","run","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d61df91a.chunk.js","sourcesContent":["import { DefaultTheme, createGlobalStyle } from \"styled-components\";\n\nexport const theme: DefaultTheme = {\n  font: \"#404040\",\n  primary: \"#fff\",\n  secondary: \"#F9386A\",\n};\n\nexport const GlobalStyle = createGlobalStyle`\n\n  * \n  {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n    outline: 0;\n  }\n\n  button, a \n  {\n    cursor: pointer;\n  }\n\n  body \n  {\n    font-family: 'Open Sans', sans-serif;\n    font-size: 16px;\n    color: ${({ theme }) => theme.font};\n    background: ${({ theme }) => theme.primary};\n  }\n`;\n","import styled from \"styled-components\";\nimport { transparentize, shade } from \"polished\";\n\ninterface NavigationProps {\n  open: boolean;\n}\n\nexport const Container = styled.div<NavigationProps>`\n  position: fixed;\n  top: 0;\n  right: 0;\n  z-index: 99;\n\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  height: 96px;\n  width: 100%;\n  padding: 0 24px;\n\n  background: ${({ theme }) => theme.primary};\n  border-bottom: 1px solid ${({ theme }) => transparentize(0.8, theme.font)};\n\n  @media (max-width: 900px) {\n    transition: top 0.2s;\n    top: ${({ open }) => (open ? 68 : 0)}px;\n  }\n`;\n\nexport const Title = styled.div`\n  display: flex;\n  align-items: center;\n  cursor: pointer;\n\n  > img {\n    margin-right: 8px;\n  }\n\n  > h1 {\n    color: ${({ theme }) => theme.font};\n    font-size: 48px;\n    font-family: \"Pangolin\", cursive;\n    font-weight: normal;\n\n    @media (max-width: 500px) {\n      font-size: 32px;\n    }\n  }\n`;\n\nexport const Navigation = styled.nav<NavigationProps>`\n  @media (max-width: 900px) {\n    position: absolute;\n    left: 0;\n    bottom: 100%;\n    width: 100%;\n    background: ${({ theme }) => theme.primary};\n  }\n\n  > ul {\n    list-style: none;\n    display: grid;\n    grid-auto-flow: column;\n    column-gap: 16px;\n\n    @media (max-width: 900px) {\n      grid-auto-flow: row;\n    }\n  }\n`;\n\nexport const NavMenu = styled.button`\n  display: none;\n  background: none;\n  border: none;\n\n  > svg {\n    color: ${({ theme }) => theme.secondary};\n    width: 32px;\n    height: 32px;\n  }\n\n  @media (max-width: 900px) {\n    display: block;\n  }\n`;\n\nexport const MainNavButton = styled.button`\n  position: relative;\n  border: none;\n  padding: 8px 16px;\n  border-radius: 8px;\n  font-size: 16px;\n  font-weight: 600;\n\n  background: ${({ theme }) => theme.secondary};\n  color: ${({ theme }) => theme.primary};\n\n  transition: background 0.2s;\n\n  width: 100%;\n\n  :hover {\n    background: ${({ theme }) => shade(0.2, theme.secondary)};\n  }\n\n  @media (max-width: 900px) {\n    border-radius: 0px;\n  }\n`;\n\nexport const NavButton = styled(MainNavButton)`\n  @media (min-width: 900px) {\n    color: ${({ theme }) => theme.secondary};\n    background: none;\n\n    ::before {\n      content: \"\";\n      position: absolute;\n      left: 50%;\n      bottom: 0;\n      width: 100%;\n      height: 2px;\n      background-color: ${({ theme }) => theme.secondary};\n      transform-origin: center;\n      transform: translate(-50%, 0) scaleX(0);\n      transition: transform 0.3s ease-in-out;\n    }\n\n    :hover::before {\n      transform: translate(-50%, 0) scaleX(1);\n    }\n\n    :hover {\n      background: none;\n    }\n  }\n`;\n","import React, { useState, useCallback } from \"react\";\nimport {\n  Container,\n  Navigation,\n  NavButton,\n  MainNavButton,\n  Title,\n  NavMenu,\n} from \"./styles\";\nimport { FiMenu } from \"react-icons/fi\";\n\nconst Header: React.FC = () => {\n  const [isMenuOpen, setMenuOpen] = useState(false);\n\n  const toggleMenu = useCallback(() => {\n    setMenuOpen((state) => !state);\n  }, []);\n\n  return (\n    <Container open={isMenuOpen}>\n      <Title>\n        <img\n          src=\"https://assets.chucknorris.host/img/avatar/chuck-norris.png\"\n          alt=\"\"\n        />\n        <h1>Chuck Jokes</h1>\n      </Title>\n\n      <Navigation open={isMenuOpen}>\n        <ul>\n          <li>\n            <NavButton>Favorites</NavButton>\n          </li>\n          <li>\n            <MainNavButton>Explore Jokes</MainNavButton>\n          </li>\n        </ul>\n      </Navigation>\n      <NavMenu onClick={toggleMenu}>\n        <FiMenu />\n      </NavMenu>\n    </Container>\n  );\n};\n\nexport default Header;\n","import styled from \"styled-components\";\n\nexport const Container = styled.div``;\n","import React from \"react\";\nimport { Container } from \"./styles\";\n\nconst Explore: React.FC = () => {\n  return <Container>Explore</Container>;\n};\n\nexport default Explore;\n","import { shade } from \"polished\";\nimport styled from \"styled-components\";\n\nexport const Container = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nexport const WelcomeMsg = styled.div`\n  position: relative;\n  flex: 1;\n  margin: 16px;\n  width: calc(100% - 32px);\n  max-width: 900px;\n  display: grid;\n  justify-items: center;\n  align-items: center;\n  border-radius: 8px;\n  overflow: hidden;\n\n  p {\n    position: relative;\n    z-index: 2;\n    padding: 16px;\n    font-size: 32px;\n    text-align: center;\n\n    span {\n      font-size: 96px;\n      font-family: \"Pangolin\", cursive;\n    }\n\n    a {\n      color: ${({ theme }) => theme.font};\n    }\n  }\n\n  button {\n    position: relative;\n    z-index: 2;\n    font-size: 32px;\n    background: ${({ theme }) => theme.secondary};\n    color: ${({ theme }) => theme.primary};\n    border: none;\n    border-radius: 8px;\n    padding: 8px 32px;\n    transition: background 0.2s;\n    align-self: flex-start;\n\n    :hover {\n      background: ${({ theme }) => shade(0.2, theme.secondary)};\n    }\n  }\n`;\n","import styled, { keyframes } from \"styled-components\";\nimport { shade } from \"polished\";\n\nexport const Container = styled.div`\n  max-width: 900px;\n  width: calc(100% - 32px);\n  border-radius: 8px;\n  margin: 16px;\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  column-gap: 4px;\n  overflow: hidden;\n  box-shadow: 0 0 100px rgba(0, 0, 0, 0.1);\n`;\n\nexport const JokeWrapper = styled.div`\n  padding: 16px;\n  grid-column: 1/3;\n`;\n\nexport const NavigationButtons = styled.div`\n  background: ${({ theme }) => theme.secondary};\n  display: grid;\n  place-content: center;\n  cursor: pointer;\n  transition: background 0.2s;\n\n  :hover {\n    background: ${({ theme }) => shade(0.2, theme.secondary)};\n  }\n\n  > svg {\n    color: ${({ theme }) => theme.primary};\n    width: 48px;\n    height: 48px;\n  }\n`;\n\nexport const HorizontalLine = styled.div`\n  height: 2px;\n  border-radius: 2px;\n  width: 100%;\n  background: ${({ theme }) => theme.secondary};\n  margin-top: 16px;\n  margin-bottom: 8px;\n`;\n\nexport const JokeArea = styled.div`\n  display: grid;\n  grid-template-columns: auto 1fr auto;\n  align-items: center;\n  column-gap: 16px;\n`;\n\nexport const Quote = styled.div`\n  :first-child {\n    align-self: flex-start;\n  }\n\n  :last-child {\n    align-self: flex-end;\n  }\n\n  svg {\n    color: ${({ theme }) => theme.secondary};\n  }\n`;\n\nexport const JokeText = styled.p`\n  font-size: 24px;\n  text-align: justify;\n`;\n\nexport const JokeOptions = styled.div`\n  padding: 0 16px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  svg {\n    cursor: pointer;\n    width: 32px;\n    height: 32px;\n    transition: 0.2s;\n\n    :hover {\n      color: ${({ theme }) => theme.secondary};\n      transform: scale(1.1);\n    }\n\n    + svg {\n      margin-left: 8px;\n    }\n  }\n`;\n\nconst leftSwing = keyframes`\n  50%,\n  100% {\n    transform: translateX(95%);\n  }\n`;\n\nconst rightSwing = keyframes`\n  50% {\n    transform: translateX(-95%);\n  }\n  100% {\n    transform: translateX(100%);\n  }\n`;\n\nexport const Loading = styled.div`\n  font-size: 24px;\n  width: 4em;\n  display: flex;\n  flex-flow: row nowrap;\n  align-items: center;\n  justify-content: space-between;\n  justify-self: center;\n  padding: 16px 0;\n\n  div {\n    width: 0.8em;\n    height: 0.8em;\n    border-radius: 50%;\n    background-color: ${({ theme }) => theme.secondary};\n  }\n\n  div:nth-of-type(1) {\n    transform: translateX(-100%);\n    animation: ${leftSwing} 0.5s ease-in alternate infinite;\n  }\n\n  div:nth-of-type(3) {\n    transform: translateX(-95%);\n    animation: ${rightSwing} 0.5s ease-out alternate infinite;\n  }\n`;\n","import { JokesActions } from \"./\";\nimport Joke from \"../../models/Joke\";\n\nexport const fetchRandomJoke = (): JokesActions => ({\n  type: \"BEGIN_FETCH_RANDOM_JOKE\",\n});\n\nexport const endFecthRandomJoke = (joke: Joke): JokesActions => ({\n  type: \"END_FECTH_RANDOM_JOKE\",\n  payload: {\n    joke,\n  },\n});\n","import React, { useCallback } from \"react\";\nimport {\n  FaFacebook,\n  FaInstagram,\n  FaQuoteLeft,\n  FaQuoteRight,\n  FaRegStar,\n  FaTwitter,\n  FaWhatsapp,\n} from \"react-icons/fa\";\nimport { IoIosArrowBack, IoIosArrowForward } from \"react-icons/io\";\nimport {\n  Container,\n  HorizontalLine,\n  JokeArea,\n  JokeOptions,\n  JokeText,\n  JokeWrapper,\n  NavigationButtons,\n  Quote,\n  Loading,\n} from \"./styles\";\nimport Joke from \"../../../models/Joke\";\nimport { useDispatch } from \"react-redux\";\nimport { fetchRandomJoke } from \"../../../redux/Jokes/actions\";\n\ninterface Props {\n  joke: Joke | null;\n  canNavigate?: boolean;\n  showOptions?: boolean;\n}\n\nconst JokeContainer: React.FC<Props> = ({ showOptions, canNavigate, joke }) => {\n  const dispatch = useDispatch();\n\n  const getNewJoke = useCallback(() => dispatch(fetchRandomJoke()), [dispatch]);\n\n  return (\n    <Container>\n      <JokeWrapper>\n        <JokeArea>\n          <Quote>\n            <FaQuoteLeft />\n          </Quote>\n          {joke ? (\n            <JokeText>{joke.value}</JokeText>\n          ) : (\n            <Loading>\n              <div />\n              <div />\n              <div />\n            </Loading>\n          )}\n          <Quote>\n            <FaQuoteRight />\n          </Quote>\n        </JokeArea>\n        {showOptions && (\n          <>\n            <HorizontalLine />\n            <JokeOptions>\n              <FaRegStar />\n              <div>\n                <FaFacebook />\n                <FaWhatsapp />\n                <FaTwitter />\n                <FaInstagram />\n              </div>\n            </JokeOptions>\n          </>\n        )}\n      </JokeWrapper>\n      {canNavigate && (\n        <>\n          <NavigationButtons>\n            <IoIosArrowBack />\n          </NavigationButtons>\n          <NavigationButtons onClick={getNewJoke}>\n            <IoIosArrowForward />\n          </NavigationButtons>\n        </>\n      )}\n    </Container>\n  );\n};\n\nexport default JokeContainer;\n","import React, { useEffect } from \"react\";\nimport { Container, WelcomeMsg } from \"./styles\";\nimport JokeContainer from \"../../components/JokeContainer\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { RootState } from \"../../../redux\";\nimport { fetchRandomJoke } from \"../../../redux/Jokes/actions\";\nimport { useHistory } from \"react-router\";\nimport { routes } from \"../../router\";\n\nconst Home: React.FC = () => {\n  const { joke } = useSelector((state: RootState) => state.jokes);\n  const dispatch = useDispatch();\n  const { push } = useHistory();\n\n  useEffect(() => {\n    dispatch(fetchRandomJoke());\n    const interval = setInterval(() => {\n      dispatch(fetchRandomJoke());\n    }, 10000);\n    return () => clearInterval(interval);\n  }, [dispatch]);\n\n  return (\n    <Container>\n      <JokeContainer joke={joke} />\n      <WelcomeMsg>\n        <p>\n          Welcome to\n          <br />\n          <span>Chuck Jokes!</span>\n          <br />A Chuck Norris facts explorer powered by{\" \"}\n          <a\n            href=\"https://api.chucknorris.io/\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            chucknorris.io\n          </a>\n          .\n        </p>\n        <button\n          onClick={() => {\n            push(routes.explore);\n            console.log(\"lol\");\n          }}\n        >\n          Explore Jokes\n        </button>\n      </WelcomeMsg>\n    </Container>\n  );\n};\n\nexport default Home;\n","import styled from \"styled-components\";\n\nexport const Content = styled.div`\n  display: flex;\n  padding-top: 96px;\n  min-height: 100vh;\n`;\n","import { createBrowserHistory } from \"history\";\nimport React from \"react\";\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\nimport Header from \"../components/Header\";\nimport Explore from \"../pages/Explore\";\nimport Home from \"../pages/Home\";\nimport { Content } from \"./styles\";\n\nconst history = createBrowserHistory();\n\nexport const routes = {\n  home: \"/\",\n  explore: \"/explore\",\n  favorites: \"/favorites\",\n};\n\nconst Router: React.FC = () => {\n  return (\n    <HashRouter basename=\"\">\n      <Header />\n      <Content>\n        <Switch>\n          <Route path={routes.explore} component={Explore} />\n          <Route exact path={routes.home} component={Home} />\n        </Switch>\n      </Content>\n    </HashRouter>\n  );\n};\n\nexport default Router;\n","import Joke from \"../../models/Joke\";\n\nexport interface JokesState {\n  joke: Joke | null;\n  category: string | null;\n  favorites: string[];\n}\n\nexport type JokesActions =\n  | {\n      type: \"BEGIN_FETCH_RANDOM_JOKE\";\n    }\n  | {\n      type: \"END_FECTH_RANDOM_JOKE\";\n      payload: {\n        joke: Joke;\n      };\n    }\n  | {\n      type: \"ADD_TO_FAVORITES\";\n      payload: {\n        id: string;\n      };\n    }\n  | {\n      type: \"REMOVE_FROM_FAVORITES\";\n      payload: {\n        id: string;\n      };\n    };\n\nconst initialState: JokesState = {\n  joke: null,\n  category: null,\n  favorites: [],\n};\n\nexport const JokesReducer = (\n  state = initialState,\n  action: JokesActions\n): JokesState => {\n  switch (action.type) {\n    case \"END_FECTH_RANDOM_JOKE\":\n      return {\n        ...state,\n        joke: action.payload.joke,\n      };\n    default:\n      return state;\n  }\n};\n","import axios from \"axios\";\nimport Joke from \"../models/Joke\";\n\nconst api = axios.create({\n  baseURL: \"https://api.chucknorris.io/jokes\",\n});\n\nexport const getRandomJoke = async (): Promise<Joke> => {\n  try {\n    const response = await api.get<Joke>(\"random\");\n    return response.data;\n  } catch (err) {\n    alert(\"Server problems, please try again later.\");\n    return {} as Joke;\n  }\n};\n","import { call, put, takeEvery } from \"redux-saga/effects\";\nimport { getRandomJoke } from \"../services/chucknorrisApi\";\nimport { endFecthRandomJoke } from \"../redux/Jokes/actions\";\n\nexport const jokesWatchers = {\n  watchFetchRandomJoke: function* () {\n    yield takeEvery(\"BEGIN_FETCH_RANDOM_JOKE\", fetchRandomJoke);\n  },\n};\n\nexport function* fetchRandomJoke() {\n  const joke = yield call(getRandomJoke);\n  yield put(endFecthRandomJoke(joke));\n}\n","import { jokesWatchers } from \"./jokesSagas\";\nimport { all, fork } from \"redux-saga/effects\";\n\nconst mySagas = function* root() {\n  yield all(Object.values(jokesWatchers).map(fork));\n};\n\nexport default mySagas;\n","import { createStore, applyMiddleware, combineReducers } from \"redux\";\nimport { JokesState, JokesReducer } from \"./Jokes\";\nimport createSagaMiddleware from \"redux-saga\";\nimport mySagas from \"../sagas\";\n\nexport interface RootState {\n  jokes: JokesState;\n}\n\nconst reducers = combineReducers<RootState>({ jokes: JokesReducer });\nconst sagaMiddleware = createSagaMiddleware();\nexport const store = createStore(reducers, applyMiddleware(sagaMiddleware));\nsagaMiddleware.run(mySagas);\n","import React from \"react\";\nimport { GlobalStyle, theme } from \"./global/styles\";\nimport { ThemeProvider } from \"styled-components\";\nimport Router from \"./router\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"../redux\";\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <ThemeProvider theme={theme}>\n        <GlobalStyle />\n        <Router />\n      </ThemeProvider>\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}