{"version":3,"sources":["App/global/styles.ts","redux/Jokes/actions.ts","App/components/Footer/styles.ts","App/components/Footer/index.tsx","App/components/Header/styles.ts","App/components/Header/index.tsx","App/components/CategorySelector/styles.ts","App/components/CategorySelector/index.tsx","App/components/JokeContainer/styles.ts","App/components/JokeContainer/index.tsx","App/pages/Explore/styles.ts","App/pages/Explore/index.tsx","App/pages/Favorites/styles.ts","App/pages/Favorites/index.tsx","App/pages/Home/styles.ts","App/pages/Home/index.tsx","App/router/styles.ts","App/router/index.tsx","redux/Jokes/index.ts","services/chucknorrisApi.ts","sagas/jokesSagas.ts","sagas/index.ts","redux/index.ts","App/index.tsx","index.tsx"],"names":["JokesActionType","theme","font","primary","secondary","GlobalStyle","createGlobalStyle","fetchRandomJoke","type","FETCH_RANDOM_JOKE","setJoke","joke","SET_JOKE","payload","setCategories","categories","SET_CATEGORIES","Container","styled","div","Footer","href","target","rel","transparentize","open","Title","Navigation","nav","NavMenu","button","MainNavButton","shade","NavButton","Header","useState","isMenuOpen","setMenuOpen","push","useHistory","toggleMenu","useCallback","state","goToHome","routes","home","goToExplore","explore","goToFavorites","favorites","onClick","src","alt","CategoryArea","CategoryBtn","selected","css","CategoryOptions","hideUnselectAll","hideSelectAll","CategorySelector","useSelector","jokes","dispatch","useDispatch","useEffect","FETCH_CATEGORIES","handleSelectAll","SELECT_ALL","handleUnselectAll","UNSELECT_ALL","mappedCategories","useMemo","map","category","i","key","index","UNSELECT_CATEGORY","unselected","SELECT_CATEGORY","length","JokeWrapper","NavigationButtons","HorizontalLine","JokeArea","JokeView","height","Quote","JokeText","p","JokeOptions","leftSwing","keyframes","rightSwing","Loading","JokeContainer","canClick","showOptions","canNavigate","JokeTextRef","useRef","setHeight","isFavorite","setIsFavorite","getNewJoke","result","find","favoriteJoke","id","useLayoutEffect","current","getBoundingClientRect","toggleFavorite","REMOVE_FROM_FAVORITES","ADD_TO_FAVORITES","addToFavorites","disabled","ref","value","FacebookShareButton","url","window","location","WhatsappShareButton","TwitterShareButton","RedditShareButton","Explore","match","replace","previousIdRef","mountRef","scrollTo","params","jokeid","FETCH_JOKE_BY_ID","path","FavoriteFactsContainer","Favorites","mappedJokes","WelcomeMsg","Home","Content","Router","LOAD_FAVORITES","basename","component","exact","initialState","api","axios","create","baseURL","getRandomJoke","a","categoriesToGet","store","getState","join","get","response","data","alert","getCategories","getJokeById","fetchJokeById","fetchCategories","jokesWatchers","watchFetchRandomJoke","takeLatest","watchFetchJokeById","watchFetchCategories","call","put","mySagas","root","all","Object","values","fork","reducers","combineReducers","action","newSelected","splice","sort","newUnselected","localStorage","setItem","JSON","stringify","newFavorites","filter","storegedFavorites","getItem","parse","sagaMiddleware","createSagaMiddleware","createStore","applyMiddleware","run","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.473a7299.chunk.js","sourcesContent":["import { DefaultTheme, createGlobalStyle } from \"styled-components\";\n\nexport const theme: DefaultTheme = {\n  font: \"#404040\",\n  primary: \"#fff\",\n  secondary: \"#F9386A\",\n};\n\nexport const GlobalStyle = createGlobalStyle`\n\n  * \n  {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n    outline: 0;\n  }\n\n  button, a \n  {\n    cursor:pointer;\n\n    :disabled{\n      cursor: auto;\n    }\n\n  }\n\n  body \n  {\n    font-family: 'Open Sans', sans-serif;\n    font-size: 16px;\n    color: ${({ theme }) => theme.font};\n    background: ${({ theme }) => theme.primary};\n  }\n`;\n","import Joke from \"../../models/Joke\";\n\nexport enum JokesActionType {\n  FETCH_RANDOM_JOKE = \"FETCH_RANDOM_JOKE\",\n  FETCH_JOKE_BY_ID = \"FETCH_JOKE_BY_ID\",\n  SET_JOKE = \"SET_JOKE\",\n  FETCH_CATEGORIES = \"FETCH_CATEGORIES\",\n  SET_CATEGORIES = \"SET_CATEGORIES\",\n  SELECT_CATEGORY = \"SELECT_CATEGORY\",\n  UNSELECT_CATEGORY = \"UNSELECT_CATEGORY\",\n  SELECT_ALL = \"SELECT_ALL\",\n  UNSELECT_ALL = \"UNSELECT_ALL\",\n  ADD_TO_FAVORITES = \"ADD_TO_FAVORITES\",\n  REMOVE_FROM_FAVORITES = \"REMOVE_FROM_FAVORITES\",\n  LOAD_FAVORITES = \"LOAD_FAVORITES\",\n}\n\nexport type JokesActions =\n  | {\n      type: JokesActionType.FETCH_RANDOM_JOKE;\n    }\n  | {\n      type: JokesActionType.FETCH_JOKE_BY_ID;\n      payload: {\n        id: string;\n      };\n    }\n  | {\n      type: JokesActionType.SET_JOKE;\n      payload: {\n        joke: Joke;\n      };\n    }\n  | {\n      type: JokesActionType.FETCH_CATEGORIES;\n    }\n  | {\n      type: JokesActionType.SET_CATEGORIES;\n      payload: {\n        categories: string[];\n      };\n    }\n  | {\n      type: JokesActionType.SELECT_CATEGORY;\n      payload: {\n        index: number;\n      };\n    }\n  | {\n      type: JokesActionType.UNSELECT_CATEGORY;\n      payload: {\n        index: number;\n      };\n    }\n  | {\n      type: JokesActionType.SELECT_ALL;\n    }\n  | {\n      type: JokesActionType.UNSELECT_ALL;\n    }\n  | {\n      type: JokesActionType.ADD_TO_FAVORITES;\n      payload: {\n        joke: Joke;\n      };\n    }\n  | {\n      type: JokesActionType.REMOVE_FROM_FAVORITES;\n      payload: {\n        id: string;\n      };\n    }\n  | {\n      type: JokesActionType.LOAD_FAVORITES;\n    };\n\nexport const fetchRandomJoke = (): JokesActions => ({\n  type: JokesActionType.FETCH_RANDOM_JOKE,\n});\n\nexport const fetchJokeById = (id: string): JokesActions => ({\n  type: JokesActionType.FETCH_JOKE_BY_ID,\n  payload: {\n    id,\n  },\n});\n\nexport const setJoke = (joke: Joke): JokesActions => ({\n  type: JokesActionType.SET_JOKE,\n  payload: {\n    joke,\n  },\n});\n\nexport const fetchCategories = (): JokesActions => ({\n  type: JokesActionType.FETCH_CATEGORIES,\n});\n\nexport const setCategories = (categories: string[]): JokesActions => ({\n  type: JokesActionType.SET_CATEGORIES,\n  payload: {\n    categories,\n  },\n});\n\nexport const selectCategory = (index: number): JokesActions => ({\n  type: JokesActionType.SELECT_CATEGORY,\n  payload: {\n    index,\n  },\n});\n\nexport const unselectCategory = (index: number): JokesActions => ({\n  type: JokesActionType.UNSELECT_CATEGORY,\n  payload: {\n    index,\n  },\n});\n\nexport const selectAll = (): JokesActions => ({\n  type: JokesActionType.SELECT_ALL,\n});\nexport const unselectAll = (): JokesActions => ({\n  type: JokesActionType.UNSELECT_ALL,\n});\n\nexport const addToFavorites = (joke: Joke): JokesActions => ({\n  type: JokesActionType.ADD_TO_FAVORITES,\n  payload: {\n    joke,\n  },\n});\n\nexport const removeFromFavorites = (id: string): JokesActions => ({\n  type: JokesActionType.REMOVE_FROM_FAVORITES,\n  payload: {\n    id,\n  },\n});\n\nexport const loadFavorites = (): JokesActions => ({\n  type: JokesActionType.LOAD_FAVORITES,\n});\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  height: 160px;\n  background: ${({ theme }) => theme.font};\n  color: ${({ theme }) => theme.primary};\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n  font-size: 16px;\n\n  a {\n    color: ${({ theme }) => theme.primary};\n  }\n\n  div {\n    display: grid;\n    grid-auto-flow: column;\n    column-gap: 32px;\n    margin-top: 16px;\n\n    svg {\n      width: 32px;\n      height: 32px;\n    }\n  }\n`;\n","import React from \"react\";\nimport { Container } from \"./styles\";\nimport { FaGithub, FaLinkedin } from \"react-icons/fa\";\n\nconst Footer: React.FC = () => {\n  return (\n    <Container>\n      <p>Created by Cazuza</p>\n      <p>\n        Powered by{\" \"}\n        <a\n          href=\"https://api.chucknorris.io/\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          chucknorris.io\n        </a>\n      </p>\n      <div>\n        <a\n          href=\"https://github.com/cazuzabarberino\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <FaGithub />\n        </a>\n        <a\n          href=\"https://www.linkedin.com/in/cazuza/\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <FaLinkedin />\n        </a>\n      </div>\n    </Container>\n  );\n};\n\nexport default Footer;\n","import styled from \"styled-components\";\nimport { transparentize, shade } from \"polished\";\n\ninterface NavigationProps {\n  open: boolean;\n}\n\nexport const Container = styled.div<NavigationProps>`\n  position: fixed;\n  top: 0;\n  right: 0;\n  z-index: 99;\n\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  height: 96px;\n  width: 100%;\n  padding: 0 24px;\n\n  background: ${({ theme }) => theme.primary};\n  border-bottom: 1px solid ${({ theme }) => transparentize(0.8, theme.font)};\n\n  @media (max-width: 900px) {\n    transition: top 0.2s;\n    top: ${({ open }) => (open ? 68 : 0)}px;\n  }\n`;\n\nexport const Title = styled.div`\n  display: flex;\n  align-items: center;\n  cursor: pointer;\n\n  > img {\n    margin-right: 8px;\n  }\n\n  > h1 {\n    color: ${({ theme }) => theme.font};\n    font-size: 48px;\n    font-family: \"Pangolin\", cursive;\n    font-weight: normal;\n\n    @media (max-width: 500px) {\n      font-size: 32px;\n    }\n  }\n`;\n\nexport const Navigation = styled.nav<NavigationProps>`\n  @media (max-width: 900px) {\n    position: absolute;\n    left: 0;\n    bottom: 100%;\n    width: 100%;\n    background: ${({ theme }) => theme.primary};\n  }\n\n  > ul {\n    list-style: none;\n    display: grid;\n    grid-auto-flow: column;\n    column-gap: 16px;\n\n    @media (max-width: 900px) {\n      grid-auto-flow: row;\n    }\n  }\n`;\n\nexport const NavMenu = styled.button`\n  display: none;\n  background: none;\n  border: none;\n\n  > svg {\n    color: ${({ theme }) => theme.secondary};\n    width: 32px;\n    height: 32px;\n  }\n\n  @media (max-width: 900px) {\n    display: block;\n  }\n`;\n\nexport const MainNavButton = styled.button`\n  position: relative;\n  border: none;\n  padding: 8px 16px;\n  border-radius: 8px;\n  font-size: 16px;\n  font-weight: 600;\n\n  background: ${({ theme }) => theme.secondary};\n  color: ${({ theme }) => theme.primary};\n\n  transition: background 0.2s;\n\n  width: 100%;\n  @media (hover: hover) and (pointer: fine) {\n    :hover {\n      background: ${({ theme }) => shade(0.2, theme.secondary)};\n    }\n  }\n\n  @media (max-width: 900px) {\n    border-radius: 0px;\n  }\n`;\n\nexport const NavButton = styled(MainNavButton)`\n  @media (min-width: 900px) {\n    color: ${({ theme }) => theme.secondary};\n    background: none;\n\n    ::before {\n      content: \"\";\n      position: absolute;\n      left: 50%;\n      bottom: 0;\n      width: 100%;\n      height: 2px;\n      background-color: ${({ theme }) => theme.secondary};\n      transform-origin: center;\n      transform: translate(-50%, 0) scaleX(0);\n      transition: transform 0.3s ease-in-out;\n    }\n\n    :hover::before {\n      transform: translate(-50%, 0) scaleX(1);\n    }\n    @media (hover: hover) and (pointer: fine) {\n      :hover {\n        background: none;\n      }\n    }\n  }\n`;\n","import React, { useState, useCallback } from \"react\";\nimport {\n  Container,\n  Navigation,\n  NavButton,\n  MainNavButton,\n  Title,\n  NavMenu,\n} from \"./styles\";\nimport { FiMenu } from \"react-icons/fi\";\nimport { useHistory } from \"react-router\";\nimport { routes } from \"../../router\";\n\nconst Header: React.FC = () => {\n  const [isMenuOpen, setMenuOpen] = useState(false);\n  const { push } = useHistory();\n\n  const toggleMenu = useCallback(() => {\n    setMenuOpen((state) => !state);\n  }, []);\n\n  const goToHome = useCallback(() => push(routes.home), [push]);\n  const goToExplore = useCallback(() => push(routes.explore), [push]);\n  const goToFavorites = useCallback(() => push(routes.favorites), [push]);\n\n  return (\n    <Container open={isMenuOpen}>\n      <Title onClick={goToHome}>\n        <img\n          src=\"https://assets.chucknorris.host/img/avatar/chuck-norris.png\"\n          alt=\"\"\n        />\n        <h1>Chuck Jokes</h1>\n      </Title>\n\n      <Navigation open={isMenuOpen}>\n        <ul>\n          <li>\n            <NavButton onClick={goToFavorites}>Favorites</NavButton>\n          </li>\n          <li>\n            <MainNavButton onClick={goToExplore}>Explore Jokes</MainNavButton>\n          </li>\n        </ul>\n      </Navigation>\n      <NavMenu onClick={toggleMenu}>\n        <FiMenu />\n      </NavMenu>\n    </Container>\n  );\n};\n\nexport default Header;\n","import styled, { css } from \"styled-components\";\nimport { shade } from \"polished\";\n\nexport const Container = styled.div`\n  max-width: 900px;\n  margin: 16px;\n`;\n\nexport const CategoryArea = styled.div`\n  position: relative;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  border: 4px solid ${({ theme }) => theme.font};\n  border-bottom: none;\n  border-radius: 8px 8px 0 0;\n  padding: 16px 8px 8px 8px;\n\n  p {\n    border-radius: 8px;\n    position: absolute;\n    bottom: 100%;\n    left: 16px;\n    font-weight: bold;\n    padding: 0 8px;\n    font-size: 16px;\n    background: ${({ theme }) => theme.primary};\n    transform: translateY(40%);\n  }\n`;\n\ninterface CategoryBtnProps {\n  selected?: boolean;\n}\n\nexport const CategoryBtn = styled.button<CategoryBtnProps>`\n  background: ${({ theme }) => theme.primary};\n  color: ${({ theme }) => theme.secondary};\n  font-size: 24px;\n  border: 2px solid ${({ theme }) => theme.secondary};\n  border-radius: 8px;\n  padding: 4px 8px;\n  margin: 4px;\n  transition: color 0.2s, background 0.2s;\n\n  ${({ selected, theme }) =>\n    selected\n      ? css`\n          background: ${theme.secondary};\n          color: ${theme.primary};\n          @media (hover: hover) and (pointer: fine) {\n            :hover {\n              background: ${shade(0.2, theme.secondary)};\n              border-color: ${shade(0.2, theme.secondary)};\n            }\n          }\n        `\n      : css`\n        @media(hover: hover) and (pointer: fine) {\n          :hover {\n            background: ${({ theme }) => theme.secondary};\n            color: ${({ theme }) => theme.primary};\n          }\n        `}\n`;\n\ninterface CategoryOptionsProps {\n  hideSelectAll: boolean;\n  hideUnselectAll: boolean;\n}\n\nexport const CategoryOptions = styled.div<CategoryOptionsProps>`\n  display: flex;\n  width: 100%;\n  border-radius: 0 0 8px 8px;\n  overflow: hidden;\n\n  button {\n    flex: 1;\n    max-width: 100%;\n    background: ${({ theme }) => theme.secondary};\n    color: ${({ theme }) => theme.primary};\n    border: 2px solid ${({ theme }) => theme.secondary};\n    font-size: 16px;\n    font-weight: bold;\n    padding: 8px 0;\n    transition: color 0.2s, background 0.2s, max-width 0.3s;\n    white-space: nowrap;\n\n    @media (hover: hover) and (pointer: fine) {\n      :hover {\n        background: ${({ theme }) => shade(0.2, theme.secondary)};\n        border-color: ${({ theme }) => shade(0.2, theme.secondary)};\n      }\n    }\n\n    :first-of-type {\n      color: ${({ theme }) => theme.secondary};\n      background: ${({ theme }) => theme.primary};\n      border-bottom-left-radius: 8px;\n      @media (hover: hover) and (pointer: fine) {\n        :hover {\n          background: ${({ theme }) => theme.secondary};\n          color: ${({ theme }) => theme.primary};\n          border-color: ${({ theme }) => theme.secondary};\n        }\n      }\n\n      ${({ hideUnselectAll }) =>\n        hideUnselectAll &&\n        css`\n          max-width: 0%;\n        `};\n    }\n\n    :last-of-type {\n      ${({ hideSelectAll }) =>\n        hideSelectAll &&\n        css`\n          max-width: 0%;\n        `};\n    }\n  }\n`;\n","import React, { useCallback, useEffect, useMemo } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { RootState } from \"../../../redux\";\nimport {\n  fetchCategories,\n  selectAll,\n  selectCategory,\n  unselectAll,\n  unselectCategory,\n} from \"../../../redux/Jokes/actions\";\nimport {\n  CategoryArea,\n  CategoryBtn,\n  CategoryOptions,\n  Container,\n} from \"./styles\";\n\nconst CategorySelector: React.FC = () => {\n  const categories = useSelector((state: RootState) => state.jokes.categories);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (!categories) {\n      dispatch(fetchCategories());\n    }\n  }, [categories, dispatch]);\n\n  const handleSelectAll = useCallback(() => dispatch(selectAll()), [dispatch]);\n  const handleUnselectAll = useCallback(() => dispatch(unselectAll()), [\n    dispatch,\n  ]);\n\n  const mappedCategories = useMemo(() => {\n    return !categories\n      ? []\n      : [\n          ...categories.selected.map((category, i) => (\n            <CategoryBtn\n              key={category}\n              onClick={() => dispatch(unselectCategory(i))}\n              selected\n            >\n              {category}\n            </CategoryBtn>\n          )),\n          ...categories.unselected.map((category, i) => (\n            <CategoryBtn\n              key={category}\n              onClick={() => dispatch(selectCategory(i))}\n            >\n              {category}\n            </CategoryBtn>\n          )),\n        ];\n  }, [categories, dispatch]);\n\n  return (\n    <Container>\n      {categories && (\n        <>\n          <CategoryArea>\n            <p>Categories</p>\n            {mappedCategories}\n          </CategoryArea>\n          <CategoryOptions\n            hideSelectAll={!!categories && categories.unselected.length === 0}\n            hideUnselectAll={!!categories && categories.selected.length === 0}\n          >\n            <button onClick={handleUnselectAll}>Unselect All</button>\n            <button onClick={handleSelectAll}>Select All</button>\n          </CategoryOptions>\n        </>\n      )}\n    </Container>\n  );\n};\nexport default CategorySelector;\n","import styled, { keyframes } from \"styled-components\";\nimport { shade } from \"polished\";\n\nexport const Container = styled.div`\n  max-width: 900px;\n  width: calc(100% - 32px);\n  border-radius: 8px;\n  margin: 16px;\n  display: grid;\n  grid-template-columns: 1fr;\n  column-gap: 4px;\n  overflow: hidden;\n  box-shadow: 0 -4px 16px rgba(0, 0, 0, 0.1);\n`;\n\nexport const JokeWrapper = styled.div`\n  padding: 16px;\n`;\n\nexport const NavigationButtons = styled.div`\n  background: ${({ theme }) => theme.secondary};\n  display: grid;\n  place-content: center;\n  cursor: pointer;\n  transition: background 0.2s;\n  color: ${({ theme }) => theme.primary};\n  font-size: 24px;\n  padding: 12px 0;\n  font-weight: bold;\n  @media (hover: hover) and (pointer: fine) {\n    :hover {\n      background: ${({ theme }) => shade(0.2, theme.secondary)};\n    }\n  }\n`;\n\nexport const HorizontalLine = styled.div`\n  height: 2px;\n  border-radius: 2px;\n  width: 100%;\n  background: ${({ theme }) => theme.secondary};\n  margin-top: 16px;\n  margin-bottom: 8px;\n`;\n\nexport const JokeArea = styled.div`\n  display: grid;\n  grid-template-columns: auto 1fr auto;\n  align-items: center;\n  column-gap: 16px;\n`;\n\ninterface JokeViewProps {\n  height: number;\n}\n\nexport const JokeView = styled.button<JokeViewProps>`\n  position: relative;\n  display: flex;\n  justify-content: center;\n  height: ${({ height }) => height}px;\n  min-height: 48px;\n  transition: height 0.3s ease-in-out;\n  overflow: hidden;\n  background: none;\n  border: none;\n  color: ${({ theme }) => theme.font};\n`;\n\nexport const Quote = styled.div`\n  :first-child {\n    align-self: flex-start;\n  }\n\n  :last-child {\n    align-self: flex-end;\n  }\n\n  svg {\n    color: ${({ theme }) => theme.secondary};\n  }\n`;\n\nexport const JokeText = styled.p`\n  position: absolute;\n  font-size: 24px;\n  text-align: left;\n`;\n\nexport const JokeOptions = styled.div`\n  padding: 0 16px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  button {\n    border: none;\n    background: none;\n    display: grid;\n    place-content: center;\n\n    + button {\n      margin-left: 8px;\n    }\n  }\n\n  > div {\n    display: flex;\n  }\n\n  svg {\n    cursor: pointer;\n    width: 32px;\n    height: 32px;\n    transition: 0.2s;\n    @media (hover: hover) and (pointer: fine) {\n      :hover {\n        color: ${({ theme }) => theme.secondary};\n        transform: scale(1.1);\n      }\n    }\n  }\n`;\n\nconst leftSwing = keyframes`\n  50%,\n  100% {\n    transform: translateX(95%);\n  }\n`;\n\nconst rightSwing = keyframes`\n  50% {\n    transform: translateX(-95%);\n  }\n  100% {\n    transform: translateX(100%);\n  }\n`;\n\nexport const Loading = styled.div`\n  font-size: 24px;\n  width: 4em;\n  display: flex;\n  flex-flow: row nowrap;\n  align-items: center;\n  justify-content: space-between;\n  justify-self: center;\n  padding: 16px 0;\n\n  div {\n    width: 0.8em;\n    height: 0.8em;\n    border-radius: 50%;\n    background-color: ${({ theme }) => theme.secondary};\n  }\n\n  div:nth-of-type(1) {\n    transform: translateX(-100%);\n    animation: ${leftSwing} 0.5s ease-in alternate infinite;\n  }\n\n  div:nth-of-type(3) {\n    transform: translateX(-95%);\n    animation: ${rightSwing} 0.5s ease-out alternate infinite;\n  }\n`;\n","import React, {\n  useCallback,\n  useLayoutEffect,\n  useRef,\n  useState,\n  useEffect,\n} from \"react\";\nimport {\n  FaFacebook,\n  FaQuoteLeft,\n  FaQuoteRight,\n  FaReddit,\n  FaRegStar,\n  FaStar,\n  FaTwitter,\n  FaWhatsapp,\n} from \"react-icons/fa\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  FacebookShareButton,\n  RedditShareButton,\n  TwitterShareButton,\n  WhatsappShareButton,\n} from \"react-share\";\nimport Joke from \"../../../models/Joke\";\nimport {\n  fetchRandomJoke,\n  addToFavorites,\n  removeFromFavorites,\n} from \"../../../redux/Jokes/actions\";\nimport {\n  Container,\n  HorizontalLine,\n  JokeArea,\n  JokeOptions,\n  JokeText,\n  JokeView,\n  JokeWrapper,\n  Loading,\n  NavigationButtons,\n  Quote,\n} from \"./styles\";\nimport { RootState } from \"../../../redux\";\n\ninterface Props {\n  joke: Joke | null;\n  canNavigate?: boolean;\n  showOptions?: boolean;\n  canClick?: boolean;\n}\n\nconst JokeContainer: React.FC<Props> = ({\n  canClick,\n  showOptions,\n  canNavigate,\n  joke,\n}) => {\n  const favorites = useSelector((state: RootState) => state.jokes.favorites);\n  const dispatch = useDispatch();\n  const JokeTextRef = useRef<HTMLParagraphElement>(null);\n  const [height, setHeight] = useState(48);\n  const [isFavorite, setIsFavorite] = useState(false);\n  const getNewJoke = useCallback(() => dispatch(fetchRandomJoke()), [dispatch]);\n\n  useEffect(() => {\n    if (joke && favorites) {\n      const result = favorites.find(\n        (favoriteJoke) => favoriteJoke.id === joke.id\n      );\n      setIsFavorite(!!result);\n    } else {\n      setIsFavorite(false);\n    }\n  }, [joke, favorites]);\n\n  useLayoutEffect(() => {\n    setHeight(\n      joke ? JokeTextRef.current?.getBoundingClientRect().height || 48 : 48\n    );\n  }, [joke, setHeight]);\n\n  const toggleFavorite = useCallback(() => {\n    if (!joke) return;\n    dispatch(isFavorite ? removeFromFavorites(joke.id) : addToFavorites(joke));\n    setIsFavorite((state) => !state);\n  }, [joke, isFavorite, dispatch]);\n\n  return (\n    <Container>\n      <JokeWrapper>\n        <JokeArea>\n          <Quote>\n            <FaQuoteLeft />\n          </Quote>\n          <JokeView onClick={getNewJoke} disabled={!canClick} height={height}>\n            {joke ? (\n              <JokeText ref={JokeTextRef}>{joke.value}</JokeText>\n            ) : (\n              <Loading>\n                <div />\n                <div />\n                <div />\n              </Loading>\n            )}\n          </JokeView>\n\n          <Quote>\n            <FaQuoteRight />\n          </Quote>\n        </JokeArea>\n        {showOptions && (\n          <>\n            <HorizontalLine />\n            <JokeOptions>\n              <button onClick={toggleFavorite}>\n                {isFavorite ? <FaStar /> : <FaRegStar />}\n              </button>\n              <div>\n                <FacebookShareButton url={window.location.href}>\n                  <FaFacebook />\n                </FacebookShareButton>\n                <WhatsappShareButton url={window.location.href}>\n                  <FaWhatsapp />\n                </WhatsappShareButton>\n                <TwitterShareButton url={window.location.href}>\n                  <FaTwitter />\n                </TwitterShareButton>\n                <RedditShareButton url={window.location.href}>\n                  <FaReddit />\n                </RedditShareButton>\n              </div>\n            </JokeOptions>\n          </>\n        )}\n      </JokeWrapper>\n      {canNavigate && (\n        <NavigationButtons onClick={getNewJoke}>Next Joke</NavigationButtons>\n      )}\n    </Container>\n  );\n};\n\nexport default JokeContainer;\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  flex: 1;\n  display: grid;\n  grid-auto-flow: row;\n  justify-items: center;\n  align-items: center;\n`;\n","import React, { useEffect, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { RouteComponentProps, useHistory } from \"react-router\";\nimport { RootState } from \"../../../redux\";\nimport { fetchJokeById, fetchRandomJoke } from \"../../../redux/Jokes/actions\";\nimport CategorySelector from \"../../components/CategorySelector\";\nimport JokeContainer from \"../../components/JokeContainer\";\nimport { Container } from \"./styles\";\nimport { routes } from \"../../router\";\n\nconst Explore: React.FC<RouteComponentProps<{ jokeid: string }>> = ({\n  match,\n}) => {\n  const { joke } = useSelector((state: RootState) => state.jokes);\n  const dispatch = useDispatch();\n  const { push, replace } = useHistory();\n  const previousIdRef = useRef(\"\");\n  const mountRef = useRef(false);\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, []);\n\n  useEffect(() => {\n    if (match.params.jokeid && match.params.jokeid !== previousIdRef.current) {\n      dispatch(fetchJokeById(match.params.jokeid));\n    }\n  }, [match.params.jokeid, dispatch]);\n\n  useEffect(() => {\n    if (mountRef.current && joke && joke.id !== previousIdRef.current) {\n      previousIdRef.current = joke.id;\n      const path = routes.explore + `/${joke.id}`;\n      if (match.params.jokeid) push(path);\n      else replace(path);\n    }\n  }, [joke, match.params.jokeid, push, replace]);\n\n  useEffect(() => {\n    if (!mountRef.current) {\n      mountRef.current = true;\n      if (!match.params.jokeid) dispatch(fetchRandomJoke());\n    }\n  }, [joke, dispatch, match.params.jokeid]);\n\n  return (\n    <Container>\n      <JokeContainer joke={joke} canNavigate showOptions />\n      <CategorySelector />\n    </Container>\n  );\n};\n\nexport default Explore;\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  flex: 1;\n  display: grid;\n  grid-auto-flow: row;\n  grid-template-rows: auto 1fr;\n  justify-items: center;\n  align-items: flex-start;\n\n  > p {\n    margin-top: 16px;\n    font-family: \"Pangolin\", cursive;\n    font-size: 24px;\n  }\n`;\n\nexport const FavoriteFactsContainer = styled.div`\n  display: grid;\n  width: 100%;\n  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\n  align-items: flex-end;\n`;\n","import React, { useMemo } from \"react\";\nimport { Container, FavoriteFactsContainer } from \"./styles\";\nimport JokeContainer from \"../../components/JokeContainer\";\nimport { useSelector } from \"react-redux\";\nimport { RootState } from \"../../../redux\";\n\nconst Favorites: React.FC = () => {\n  const favorites = useSelector((state: RootState) => state.jokes.favorites);\n\n  const mappedJokes = useMemo(\n    () =>\n      !favorites\n        ? []\n        : favorites.map((joke) => <JokeContainer joke={joke} showOptions />),\n    [favorites]\n  );\n\n  return (\n    <Container>\n      <p>Your favorite Chuck facts.</p>\n      <FavoriteFactsContainer>{mappedJokes}</FavoriteFactsContainer>\n    </Container>\n  );\n};\n\nexport default Favorites;\n","import { shade } from \"polished\";\nimport styled from \"styled-components\";\n\nexport const Container = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  > button {\n    display: flex;\n    justify-content: center;\n    background: none;\n    border: none;\n    width: 100%;\n  }\n`;\n\nexport const WelcomeMsg = styled.div`\n  position: relative;\n  flex: 1;\n  margin: 16px;\n  width: calc(100% - 32px);\n  max-width: 900px;\n  display: grid;\n  justify-items: center;\n  align-items: center;\n  border-radius: 8px;\n\n  > p {\n    position: relative;\n    z-index: 2;\n    padding: 16px;\n    font-size: 32px;\n    text-align: center;\n\n    > span {\n      position: relative;\n      font-size: 96px;\n      font-family: \"Pangolin\", cursive;\n    }\n\n    > a {\n      color: ${({ theme }) => theme.font};\n    }\n\n    :last-child {\n      font-size: 24px;\n    }\n  }\n\n  > button {\n    position: relative;\n    z-index: 2;\n    font-size: 32px;\n    background: ${({ theme }) => theme.secondary};\n    color: ${({ theme }) => theme.primary};\n    border: none;\n    border-radius: 8px;\n    padding: 8px 32px;\n    transition: background 0.2s;\n    align-self: flex-start;\n    @media (hover: hover) and (pointer: fine) {\n      :hover {\n        background: ${({ theme }) => shade(0.2, theme.secondary)};\n      }\n    }\n  }\n`;\n","import React, { useEffect, useCallback } from \"react\";\nimport { Container, WelcomeMsg } from \"./styles\";\nimport JokeContainer from \"../../components/JokeContainer\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { RootState } from \"../../../redux\";\nimport { fetchRandomJoke } from \"../../../redux/Jokes/actions\";\nimport { useHistory } from \"react-router\";\nimport { routes } from \"../../router\";\n\nconst Home: React.FC = () => {\n  const { joke } = useSelector((state: RootState) => state.jokes);\n  const dispatch = useDispatch();\n  const { push } = useHistory();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n    dispatch(fetchRandomJoke());\n  }, [dispatch]);\n\n  const goToExplore = useCallback(() => push(routes.explore), [push]);\n\n  return (\n    <Container>\n      <WelcomeMsg>\n        <p>\n          Welcome to\n          <br />\n          <span>Chuck Jokes!</span>\n        </p>\n        <p>\n          A Chuck Norris facts explorer powered by{\" \"}\n          <a\n            href=\"https://api.chucknorris.io/\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            chucknorris.io\n          </a>\n          .\n        </p>\n      </WelcomeMsg>\n      <JokeContainer joke={joke} canClick />\n      <WelcomeMsg>\n        <button onClick={goToExplore}>Explore Jokes</button>\n      </WelcomeMsg>\n    </Container>\n  );\n};\n\nexport default Home;\n","import styled from \"styled-components\";\n\nexport const Content = styled.div`\n  display: flex;\n  padding-top: 96px;\n  min-height: calc(100vh - 160px);\n`;\n","import React, { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { loadFavorites } from \"../../redux/Jokes/actions\";\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\nimport Footer from \"../components/Footer\";\nimport Header from \"../components/Header\";\nimport Explore from \"../pages/Explore\";\nimport Favorites from \"../pages/Favorites\";\nimport Home from \"../pages/Home\";\nimport { Content } from \"./styles\";\n\nexport const routes = {\n  home: \"/\",\n  explore: \"/explore\",\n  favorites: \"/favorites\",\n};\n\nconst Router: React.FC = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(loadFavorites());\n  }, [dispatch]);\n\n  return (\n    <HashRouter basename=\"\">\n      <Header />\n      <Content>\n        <Switch>\n          <Route path={routes.explore + \"/:jokeid?\"} component={Explore} />\n          <Route path={routes.favorites} component={Favorites} />\n          <Route exact path={routes.home} component={Home} />\n        </Switch>\n      </Content>\n      <Footer />\n    </HashRouter>\n  );\n};\n\nexport default Router;\n","import Joke from \"../../models/Joke\";\nimport { JokesActions, JokesActionType } from \"./actions\";\n\nexport interface JokesState {\n  joke: Joke | null;\n  favorites: Joke[] | null;\n  categories: {\n    selected: string[];\n    unselected: string[];\n  } | null;\n}\n\nconst initialState: JokesState = {\n  joke: null,\n  favorites: null,\n  categories: null,\n};\n\nexport const JokesReducer = (\n  state = initialState,\n  action: JokesActions\n): JokesState => {\n  switch (action.type) {\n    case JokesActionType.FETCH_JOKE_BY_ID:\n    case JokesActionType.FETCH_RANDOM_JOKE:\n      return {\n        ...state,\n        joke: null,\n      };\n    case JokesActionType.SET_JOKE:\n      return {\n        ...state,\n        joke: action.payload.joke,\n      };\n    case JokesActionType.SET_CATEGORIES:\n      return {\n        ...state,\n        categories: { unselected: action.payload.categories, selected: [] },\n      };\n    case JokesActionType.SELECT_CATEGORY:\n      if (!state.categories) return state;\n      {\n        const { selected, unselected } = state.categories;\n        const newSelected = unselected.splice(action.payload.index, 1);\n        return {\n          ...state,\n          categories: {\n            selected: [...selected, ...newSelected].sort(),\n            unselected,\n          },\n        };\n      }\n    case JokesActionType.UNSELECT_CATEGORY:\n      if (!state.categories) return state;\n      {\n        const { selected, unselected } = state.categories;\n        const newUnselected = selected.splice(action.payload.index, 1);\n        return {\n          ...state,\n          categories: {\n            selected,\n            unselected: [...unselected, ...newUnselected].sort(),\n          },\n        };\n      }\n    case JokesActionType.SELECT_ALL:\n      if (!state.categories) return state;\n      {\n        const { selected, unselected } = state.categories;\n        return {\n          ...state,\n          categories: {\n            selected: [...selected, ...unselected].sort(),\n            unselected: [],\n          },\n        };\n      }\n    case JokesActionType.UNSELECT_ALL:\n      if (!state.categories) return state;\n      {\n        const { selected, unselected } = state.categories;\n        return {\n          ...state,\n          categories: {\n            selected: [],\n            unselected: [...selected, ...unselected].sort(),\n          },\n        };\n      }\n    case JokesActionType.ADD_TO_FAVORITES:\n      if (!state.favorites) return state;\n      {\n        const { favorites } = state;\n        favorites.push(action.payload.joke);\n\n        localStorage.setItem(\n          \"$Chuck-Jokes:Favorites\",\n          JSON.stringify(favorites)\n        );\n\n        return {\n          ...state,\n        };\n      }\n    case JokesActionType.REMOVE_FROM_FAVORITES:\n      if (!state.favorites) return state;\n      {\n        const { favorites } = state;\n        const newFavorites = favorites.filter(\n          (joke) => joke.id !== action.payload.id\n        );\n\n        localStorage.setItem(\n          \"$Chuck-Jokes:Favorites\",\n          JSON.stringify(newFavorites)\n        );\n\n        return {\n          ...state,\n          favorites: newFavorites,\n        };\n      }\n    case JokesActionType.LOAD_FAVORITES:\n      const storegedFavorites = localStorage.getItem(\"$Chuck-Jokes:Favorites\");\n      if (storegedFavorites) {\n        return {\n          ...state,\n          favorites: JSON.parse(storegedFavorites),\n        };\n      }\n      return {\n        ...state,\n        favorites: [],\n      };\n    default:\n      return state;\n  }\n};\n","import axios from \"axios\";\nimport Joke from \"../models/Joke\";\nimport { store } from \"../redux\";\n\nconst api = axios.create({\n  baseURL: \"https://api.chucknorris.io/jokes\",\n});\n\nexport const getRandomJoke = async (): Promise<Joke> => {\n  try {\n    let categoriesToGet = \"\";\n    const categories = store.getState().jokes.categories;\n    if (categories) {\n      categoriesToGet = categories.selected.join(\",\");\n      if (categoriesToGet) categoriesToGet = \"?category=\" + categoriesToGet;\n    }\n\n    const response = await api.get<Joke>(`random${categoriesToGet}`);\n    return response.data;\n  } catch (err) {\n    alert(\"Server problems, please try again later.\");\n    return {} as Joke;\n  }\n};\n\nexport const getCategories = async (): Promise<string[]> => {\n  try {\n    const response = await api.get<string[]>(\"categories\");\n\n    return response.data;\n  } catch (err) {\n    return [];\n  }\n};\n\nexport const getJokeById = async (id: string): Promise<Joke> => {\n  try {\n    const response = await api.get<Joke>(id);\n    return response.data;\n  } catch (err) {\n    return {} as Joke;\n  }\n};\n","import { call, put, takeLatest } from \"redux-saga/effects\";\nimport {\n  getRandomJoke,\n  getJokeById,\n  getCategories,\n} from \"../services/chucknorrisApi\";\nimport {\n  setJoke,\n  setCategories,\n  JokesActionType,\n} from \"../redux/Jokes/actions\";\n\nexport const jokesWatchers = {\n  watchFetchRandomJoke: function* () {\n    yield takeLatest(JokesActionType.FETCH_RANDOM_JOKE, fetchRandomJoke);\n  },\n\n  watchFetchJokeById: function* () {\n    yield takeLatest(JokesActionType.FETCH_JOKE_BY_ID, fetchJokeById);\n  },\n\n  watchFetchCategories: function* () {\n    yield takeLatest(JokesActionType.FETCH_CATEGORIES, fetchCategories);\n  },\n};\n\nexport function* fetchRandomJoke() {\n  const joke = yield call(getRandomJoke);\n  yield put(setJoke(joke));\n}\n\nexport function* fetchJokeById({\n  payload: { id },\n}: {\n  type: JokesActionType.FETCH_JOKE_BY_ID;\n  payload: { id: string };\n}) {\n  const joke = yield call(() => getJokeById(id));\n  yield put(setJoke(joke));\n}\n\nexport function* fetchCategories() {\n  const categories = yield call(getCategories);\n  yield put(setCategories(categories));\n}\n","import { jokesWatchers } from \"./jokesSagas\";\nimport { all, fork } from \"redux-saga/effects\";\n\nconst mySagas = function* root() {\n  yield all(Object.values(jokesWatchers).map(fork));\n};\n\nexport default mySagas;\n","import { createStore, applyMiddleware, combineReducers } from \"redux\";\nimport { JokesState, JokesReducer } from \"./Jokes\";\nimport createSagaMiddleware from \"redux-saga\";\nimport mySagas from \"../sagas\";\n\nexport interface RootState {\n  jokes: JokesState;\n}\n\nconst reducers = combineReducers<RootState>({ jokes: JokesReducer });\nconst sagaMiddleware = createSagaMiddleware();\nexport const store = createStore(reducers, applyMiddleware(sagaMiddleware));\nsagaMiddleware.run(mySagas);\n","import React from \"react\";\nimport { GlobalStyle, theme } from \"./global/styles\";\nimport { ThemeProvider } from \"styled-components\";\nimport Router from \"./router\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"../redux\";\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <ThemeProvider theme={theme}>\n        <GlobalStyle />\n        <Router />\n      </ThemeProvider>\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}